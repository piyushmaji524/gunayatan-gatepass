<?php
// Enable error reporting for debugging
ini_set('display_errors', 1);
error_reporting(E_ALL);

// Log access to this file
error_log("Access to export_report_pdf.php: " . date('Y-m-d H:i:s'));

require_once '../includes/config.php';
require_once '../fpdf/fpdf.php';

// Check if user is logged in and has admin role
if (!function_exists('isLoggedIn')) {
    function isLoggedIn() {
        return isset($_SESSION['user_id']) && !empty($_SESSION['user_id']);
    }
}

if (!isLoggedIn() || $_SESSION['role'] !== 'admin') {
    error_log("Authentication failed in export_report_pdf.php: User not logged in or not admin");
    header("Location: ../index.php");
    exit();
}

// Try-catch to catch any connection errors
try {
    // Connect to database
    $conn = connectDB();
} catch (Exception $e) {
    // Output plain text error instead of redirecting
    header("Content-Type: text/plain");
    echo "Database connection error: " . $e->getMessage();
    error_log("Database connection error in export_report_pdf.php: " . $e->getMessage());
    exit();
}

// Get parameters
$report_type = isset($_GET['type']) ? sanitizeInput($_GET['type']) : '';
$date_from = isset($_GET['date_from']) ? sanitizeInput($_GET['date_from']) : date('Y-m-01');
$date_to = isset($_GET['date_to']) ? sanitizeInput($_GET['date_to']) : date('Y-m-d');
$user_id = isset($_GET['user_id']) ? (int)$_GET['user_id'] : 0;
$status = isset($_GET['status']) ? sanitizeInput($_GET['status']) : '';

// Define report types
$report_types = [
    'daily' => 'Daily Report',
    'weekly' => 'Weekly Report',
    'monthly' => 'Monthly Report',
    'user' => 'User Report',
    'detailed' => 'Detailed Gatepass Report',
    'status' => 'Status Report'
];

// Validate report type
if (!array_key_exists($report_type, $report_types)) {
    $_SESSION['error'] = "Invalid report type.";
    header("Location: reports.php");
    exit();
}

// Custom PDF class
class ReportPDF extends FPDF {
    private $report_title;
    private $date_range;
    
    function __construct($orientation='P', $unit='mm', $size='A4', $title='', $date_range='') {
        parent::__construct($orientation, $unit, $size);
        $this->report_title = $title;
        $this->date_range = $date_range;
    }
    
    function Header() {
        // Logo
        if (file_exists('../assets/img/logo.png')) {
            $this->Image('../assets/img/logo.png', 10, 10, 30);
        }
        
        // Title
        $this->SetFont('Arial', 'B', 15);
        $this->SetXY(45, 10);
        $this->Cell(150, 10, APP_NAME, 0, 0, 'L');
        
        // Report Title
        $this->SetFont('Arial', 'B', 12);
        $this->SetXY(45, 18);
        $this->Cell(150, 10, $this->report_title, 0, 1, 'L');
        
        $this->SetFont('Arial', '', 10);
        $this->SetXY(45, 26);
        $this->Cell(150, 6, $this->date_range, 0, 1, 'L');
        $this->SetXY(45, 32);
        $this->Cell(150, 6, "Generated on: " . date('Y-m-d H:i:s'), 0, 1, 'L');
        $this->SetXY(45, 38);
        $this->Cell(150, 6, "Generated by: " . $_SESSION['name'] . " (" . ucfirst($_SESSION['role']) . ")", 0, 1, 'L');
        
        // Draw line
        $this->Line(10, 48, 200, 48);
        
        $this->SetY(55);
    }
    
    function Footer() {
        // Position at 1.5 cm from bottom
        $this->SetY(-15);
        
        // Set font
        $this->SetFont('Arial', 'I', 8);
        
        // Page number
        $this->Cell(0, 10, 'Page ' . $this->PageNo() . '/{nb}', 0, 0, 'C');
    }
    
    function ChapterTitle($title) {
        $this->SetFont('Arial', 'B', 12);
        $this->Cell(0, 6, $title, 0, 1, 'L');
        $this->Ln(2);
    }
    
    function SectionTitle($title) {
        $this->SetFont('Arial', 'B', 11);
        $this->Cell(0, 6, $title, 0, 1, 'L');
        $this->Ln(2);
    }
      function TableHeader($headers, $widths) {
        $this->SetFont('Arial', 'B', 9);
        // Use a lighter fill color (light gray) to ensure text is visible
        $this->SetFillColor(240, 240, 240);
        $this->SetTextColor(0, 0, 0); // Ensure text is black
        
        foreach ($headers as $i => $header) {
            $this->Cell($widths[$i], 8, $header, 1, 0, 'C', true);
        }
        $this->Ln();
    }
    
    function TableRow($data, $widths) {
        $this->SetFont('Arial', '', 9);
        
        foreach ($data as $i => $value) {
            $this->Cell($widths[$i], 7, $value, 1, 0, 'L');
        }
        $this->Ln();
    }
}

// Build report title and date range
$report_title = $report_types[$report_type];

// Add user name if it's a user report
if ($report_type == 'user' && $user_id) {
    $user_query = "SELECT name FROM users WHERE id = ?";
    $stmt = $conn->prepare($user_query);
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    $result = $stmt->get_result();
    if ($row = $result->fetch_assoc()) {
        $report_title .= ': ' . $row['name'];
    }
}

// Add status if it's a status report
if ($report_type == 'status' && $status) {
    $report_title .= ': ' . ucfirst($status);
}

$date_range = "Date Range: " . date('Y-m-d', strtotime($date_from)) . " to " . date('Y-m-d', strtotime($date_to));

// Create new PDF
$pdf = new ReportPDF('L', 'mm', 'A4', $report_title, $date_range);
$pdf->AliasNbPages();
$pdf->AddPage();
$pdf->SetFont('Arial', '', 10);

// Different report types need different data
$from_date_with_time = $date_from . " 00:00:00";
$to_date_with_time = $date_to . " 23:59:59";

switch ($report_type) {
    case 'daily':
        // Daily report
        $query = "SELECT 
                    DATE(created_at) as report_date, 
                    COUNT(*) as total_gatepasses,
                    SUM(CASE WHEN status = 'approved_by_admin' OR status = 'approved_by_security' THEN 1 ELSE 0 END) as approved,
                    SUM(CASE WHEN status = 'pending' THEN 1 ELSE 0 END) as pending,
                    SUM(CASE WHEN status = 'declined' THEN 1 ELSE 0 END) as declined
                  FROM gatepasses 
                  WHERE DATE(created_at) BETWEEN ? AND ?
                  GROUP BY DATE(created_at)
                  ORDER BY DATE(created_at)";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("ss", $date_from, $date_to);
        $stmt->execute();
        $result = $stmt->get_result();
        
        $pdf->ChapterTitle('Daily Gatepass Report');
        
        if ($result->num_rows > 0) {
            $headers = ['Date', 'Total Gatepasses', 'Approved', 'Pending', 'Declined'];
            $widths = [60, 50, 50, 50, 50];
            $pdf->TableHeader($headers, $widths);
            
            $total_gatepasses = $total_approved = $total_pending = $total_declined = 0;
            
            while ($row = $result->fetch_assoc()) {
                $pdf->TableRow([
                    date('d M Y', strtotime($row['report_date'])),
                    $row['total_gatepasses'],
                    $row['approved'],
                    $row['pending'],
                    $row['declined']
                ], $widths);
                
                $total_gatepasses += $row['total_gatepasses'];
                $total_approved += $row['approved'];
                $total_pending += $row['pending'];
                $total_declined += $row['declined'];
            }
            
            // Add totals row
            $pdf->SetFont('Arial', 'B', 9);
            $pdf->Cell($widths[0], 8, 'Total', 1, 0, 'L', true);
            $pdf->Cell($widths[1], 8, $total_gatepasses, 1, 0, 'L', true);
            $pdf->Cell($widths[2], 8, $total_approved, 1, 0, 'L', true);
            $pdf->Cell($widths[3], 8, $total_pending, 1, 0, 'L', true);
            $pdf->Cell($widths[4], 8, $total_declined, 1, 0, 'L', true);
        } else {
            $pdf->Cell(0, 10, 'No data found for the selected period.', 0, 1);
        }
        break;
        
    case 'weekly':
        // Weekly report
        $query = "SELECT 
                    YEARWEEK(created_at, 1) as report_week,
                    MIN(DATE(created_at)) as week_start,
                    MAX(DATE(created_at)) as week_end, 
                    COUNT(*) as total_gatepasses,
                    SUM(CASE WHEN status = 'approved_by_admin' OR status = 'approved_by_security' THEN 1 ELSE 0 END) as approved,
                    SUM(CASE WHEN status = 'pending' THEN 1 ELSE 0 END) as pending,
                    SUM(CASE WHEN status = 'declined' THEN 1 ELSE 0 END) as declined
                  FROM gatepasses 
                  WHERE DATE(created_at) BETWEEN ? AND ?
                  GROUP BY YEARWEEK(created_at, 1)
                  ORDER BY report_week";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("ss", $date_from, $date_to);
        $stmt->execute();
        $result = $stmt->get_result();
        
        $pdf->ChapterTitle('Weekly Gatepass Report');
        
        if ($result->num_rows > 0) {
            $headers = ['Week', 'Period', 'Total Gatepasses', 'Approved', 'Pending', 'Declined'];
            $widths = [30, 60, 40, 40, 40, 40];
            $pdf->TableHeader($headers, $widths);
            
            $total_gatepasses = $total_approved = $total_pending = $total_declined = 0;
            
            while ($row = $result->fetch_assoc()) {
                $pdf->TableRow([
                    'Week ' . substr($row['report_week'], -2),
                    date('d M', strtotime($row['week_start'])) . ' - ' . date('d M Y', strtotime($row['week_end'])),
                    $row['total_gatepasses'],
                    $row['approved'],
                    $row['pending'],
                    $row['declined']
                ], $widths);
                
                $total_gatepasses += $row['total_gatepasses'];
                $total_approved += $row['approved'];
                $total_pending += $row['pending'];
                $total_declined += $row['declined'];
            }
            
            // Add totals row
            $pdf->SetFont('Arial', 'B', 9);
            $pdf->Cell($widths[0] + $widths[1], 8, 'Total', 1, 0, 'L', true);
            $pdf->Cell($widths[2], 8, $total_gatepasses, 1, 0, 'L', true);
            $pdf->Cell($widths[3], 8, $total_approved, 1, 0, 'L', true);
            $pdf->Cell($widths[4], 8, $total_pending, 1, 0, 'L', true);
            $pdf->Cell($widths[5], 8, $total_declined, 1, 0, 'L', true);
        } else {
            $pdf->Cell(0, 10, 'No data found for the selected period.', 0, 1);
        }
        break;
        
    case 'monthly':
        // Monthly report
        $query = "SELECT 
                    DATE_FORMAT(created_at, '%Y-%m') as report_month,
                    DATE_FORMAT(created_at, '%M %Y') as month_name,
                    COUNT(*) as total_gatepasses,
                    SUM(CASE WHEN status = 'approved_by_admin' OR status = 'approved_by_security' THEN 1 ELSE 0 END) as approved,
                    SUM(CASE WHEN status = 'pending' THEN 1 ELSE 0 END) as pending,
                    SUM(CASE WHEN status = 'declined' THEN 1 ELSE 0 END) as declined
                  FROM gatepasses 
                  WHERE DATE(created_at) BETWEEN ? AND ?
                  GROUP BY DATE_FORMAT(created_at, '%Y-%m'), DATE_FORMAT(created_at, '%M %Y')
                  ORDER BY report_month";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("ss", $date_from, $date_to);
        $stmt->execute();
        $result = $stmt->get_result();
        
        $pdf->ChapterTitle('Monthly Gatepass Report');
        
        if ($result->num_rows > 0) {
            $headers = ['Month', 'Total Gatepasses', 'Approved', 'Pending', 'Declined'];
            $widths = [60, 50, 50, 50, 50];
            $pdf->TableHeader($headers, $widths);
            
            $total_gatepasses = $total_approved = $total_pending = $total_declined = 0;
            
            while ($row = $result->fetch_assoc()) {
                $pdf->TableRow([
                    $row['month_name'],
                    $row['total_gatepasses'],
                    $row['approved'],
                    $row['pending'],
                    $row['declined']
                ], $widths);
                
                $total_gatepasses += $row['total_gatepasses'];
                $total_approved += $row['approved'];
                $total_pending += $row['pending'];
                $total_declined += $row['declined'];
            }
            
            // Add totals row
            $pdf->SetFont('Arial', 'B', 9);
            $pdf->Cell($widths[0], 8, 'Total', 1, 0, 'L', true);
            $pdf->Cell($widths[1], 8, $total_gatepasses, 1, 0, 'L', true);
            $pdf->Cell($widths[2], 8, $total_approved, 1, 0, 'L', true);
            $pdf->Cell($widths[3], 8, $total_pending, 1, 0, 'L', true);
            $pdf->Cell($widths[4], 8, $total_declined, 1, 0, 'L', true);
        } else {
            $pdf->Cell(0, 10, 'No data found for the selected period.', 0, 1);
        }
        break;
        
    case 'user':
        // User report
        if (!$user_id) {
            $pdf->Cell(0, 10, 'No user selected for the report.', 0, 1);
            break;
        }
        
        $query = "SELECT 
                    g.gatepass_number, 
                    g.purpose, 
                    g.status, 
                    g.created_at,
                    COALESCE(g.admin_approved_at, g.security_approved_at) as approved_at,
                    a.name as approved_by
                  FROM gatepasses g
                  LEFT JOIN users a ON g.admin_approved_by = a.id OR g.security_approved_by = a.id
                  WHERE g.created_by = ?
                  AND DATE(g.created_at) BETWEEN ? AND ?
                  ORDER BY g.created_at DESC";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("iss", $user_id, $date_from, $date_to);
        $stmt->execute();
        $result = $stmt->get_result();
        
        $pdf->ChapterTitle('User Gatepass Report');
        
        if ($result->num_rows > 0) {
            $headers = ['Gatepass #', 'Purpose', 'Status', 'Created On', 'Approved By', 'Approved At'];
            $widths = [30, 80, 30, 35, 40, 35];
            $pdf->TableHeader($headers, $widths);
            
            while ($row = $result->fetch_assoc()) {
                // Format status
                switch ($row['status']) {
                    case 'approved_by_admin':
                    case 'approved_by_security':
                        $status = 'Approved';
                        break;
                    case 'pending':
                        $status = 'Pending';
                        break;
                    case 'declined':
                        $status = 'Declined';
                        break;
                    default:
                        $status = $row['status'];
                }
                
                $pdf->TableRow([
                    $row['gatepass_number'],
                    $row['purpose'],
                    $status,
                    date('d M Y H:i', strtotime($row['created_at'])),
                    $row['approved_by'] ? $row['approved_by'] : '-',
                    $row['approved_at'] ? date('d M Y H:i', strtotime($row['approved_at'])) : '-'
                ], $widths);
            }
        } else {
            $pdf->Cell(0, 10, 'No gatepasses found for this user in the selected period.', 0, 1);
        }
        break;
        
    case 'detailed':
        // Detailed gatepass report
        $query = "SELECT 
                    g.id,
                    @serial_no := @serial_no + 1 as serial_no,
                    g.requested_date,
                    g.requested_time,
                    u.name as user_name,
                    g.gatepass_number,
                    GROUP_CONCAT(DISTINCT gi.item_name SEPARATOR ', ') as item_names,
                    GROUP_CONCAT(DISTINCT CONCAT(gi.quantity, ' ', gi.unit) SEPARATOR ', ') as quantities,
                    g.purpose as description,
                    g.from_location as 'from',
                    g.to_location as 'to',
                    g.admin_approved_at,
                    admin.name as admin_name,
                    g.security_approved_at,
                    security.name as security_name
                  FROM 
                    (SELECT @serial_no := 0) as s,
                    gatepasses g
                    LEFT JOIN users u ON g.created_by = u.id
                    LEFT JOIN users admin ON g.admin_approved_by = admin.id
                    LEFT JOIN users security ON g.security_approved_by = security.id
                    LEFT JOIN gatepass_items gi ON g.id = gi.gatepass_id
                  WHERE DATE(g.created_at) BETWEEN ? AND ?
                  GROUP BY g.id
                  ORDER BY g.created_at DESC";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("ss", $date_from, $date_to);
        $stmt->execute();
        $result = $stmt->get_result();
        
        $pdf->ChapterTitle('Detailed Gatepass Report');
        
        if ($result->num_rows > 0) {            // Set PDF to Landscape for this report type
            $headers = [
                'S.No', 'Request Date', 'Request Time', 'User Name', 'Gatepass #', 
                'Item Names', 'Quantity', 'Description', 'From', 'To', 
                'Admin Date', 'Admin Time', 'Admin Name', 
                'Security Date', 'Security Time', 'Security Name'
            ];
            // Adjusted widths to better fit the content
            $widths = [10, 18, 18, 25, 22, 30, 22, 30, 20, 20, 18, 18, 25, 18, 18, 25];
            
            // Use slightly larger font (8pt) for better readability
            $pdf->SetFont('Arial', 'B', 8);
            
            // Set colors for header 
            $pdf->SetFillColor(240, 240, 240);
            $pdf->SetTextColor(0, 0, 0); // Ensure text is black
            
            // Table Headers
            foreach ($headers as $i => $header) {
                $pdf->Cell($widths[$i], 8, $header, 1, 0, 'C', true);
            }
            $pdf->Ln();
            // Reset text color for data rows
            $pdf->SetTextColor(0, 0, 0);
              // Table Data
            $pdf->SetFont('Arial', '', 8);  // Slightly larger font for better readability
            
            while ($row = $result->fetch_assoc()) {
                // Format dates and times
                $admin_date = $admin_time = $security_date = $security_time = '-';
                
                if ($row['admin_approved_at']) {
                    $admin_date_time = new DateTime($row['admin_approved_at']);
                    $admin_date = $admin_date_time->format('Y-m-d');
                    $admin_time = $admin_date_time->format('H:i:s');
                }
                
                if ($row['security_approved_at']) {
                    $security_date_time = new DateTime($row['security_approved_at']);
                    $security_date = $security_date_time->format('Y-m-d');
                    $security_time = $security_date_time->format('H:i:s');
                }
                
                // Output row data
                $data = [
                    $row['serial_no'],
                    date('d M Y', strtotime($row['requested_date'])),
                    date('H:i', strtotime($row['requested_time'])),
                    $row['user_name'],
                    $row['gatepass_number'],
                    $row['item_names'],
                    $row['quantities'],
                    $row['description'],
                    $row['from'],
                    $row['to'],
                    $admin_date,
                    $admin_time, 
                    $row['admin_name'] ? $row['admin_name'] : '-',
                    $security_date,
                    $security_time,
                    $row['security_name'] ? $row['security_name'] : '-'
                ];
                  foreach ($data as $i => $value) {
                    // Handle cell overflow for text fields with improved truncation
                    if ($i == 5) { // Item names - allow slightly more characters
                        $pdf->Cell($widths[$i], 7, substr($value, 0, 35) . (strlen($value) > 35 ? '...' : ''), 1);
                    } else if ($i == 6 || $i == 7) { // Quantities, description
                        $pdf->Cell($widths[$i], 7, substr($value, 0, 32) . (strlen($value) > 32 ? '...' : ''), 1);
                    } else {
                        $pdf->Cell($widths[$i], 7, $value, 1);
                    }
                }
                $pdf->Ln();
                
                // Check if we need a new page - adjust Y position threshold for better fit
                if ($pdf->GetY() > 170) {
                    $pdf->AddPage();
                    
                    // Reprint headers on new page with consistent formatting
                    $pdf->SetFont('Arial', 'B', 8);
                    $pdf->SetFillColor(240, 240, 240);
                    $pdf->SetTextColor(0, 0, 0);
                    
                    foreach ($headers as $i => $header) {
                        $pdf->Cell($widths[$i], 8, $header, 1, 0, 'C', true);
                    }
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', 8);
                }
            }
        } else {
            $pdf->Cell(0, 10, 'No detailed gatepass data found for the selected period.', 0, 1);
        }
        break;
        
    case 'status':
        // Status report
        $statusFilter = "";
        if ($status == 'approved') {
            $statusFilter = "g.status IN ('approved_by_admin', 'approved_by_security')";
        } else if ($status == 'pending') {
            $statusFilter = "g.status = 'pending'";
        } else if ($status == 'declined') {
            $statusFilter = "g.status = 'declined'";
        } else {
            $pdf->Cell(0, 10, 'Invalid status selected for the report.', 0, 1);
            break;
        }
        
        $query = "SELECT 
                    g.gatepass_number, 
                    g.purpose, 
                    u.name as created_by,
                    g.created_at, 
                    CASE 
                        WHEN g.admin_approved_by IS NOT NULL THEN admin.name
                        WHEN g.security_approved_by IS NOT NULL THEN security.name
                        ELSE NULL
                    END as approved_by,
                    COALESCE(g.admin_approved_at, g.security_approved_at) as approved_at
                  FROM gatepasses g
                  LEFT JOIN users u ON g.created_by = u.id
                  LEFT JOIN users admin ON g.admin_approved_by = admin.id
                  LEFT JOIN users security ON g.security_approved_by = security.id
                  WHERE $statusFilter
                  AND DATE(g.created_at) BETWEEN ? AND ?
                  ORDER BY g.created_at DESC";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("ss", $date_from, $date_to);
        $stmt->execute();
        $result = $stmt->get_result();
        
        $pdf->ChapterTitle('Status Report: ' . ucfirst($status));
        
        if ($result->num_rows > 0) {
            $headers = ['Gatepass #', 'Purpose', 'Created By', 'Created On', 'Approved By', 'Approved At'];
            $widths = [40, 60, 40, 40, 40, 40];
            $pdf->TableHeader($headers, $widths);
            
            while ($row = $result->fetch_assoc()) {
                $pdf->TableRow([
                    $row['gatepass_number'],
                    $row['purpose'],
                    $row['created_by'],
                    date('d M Y H:i', strtotime($row['created_at'])),
                    $row['approved_by'] ? $row['approved_by'] : '-',
                    $row['approved_at'] ? date('d M Y H:i', strtotime($row['approved_at'])) : '-'
                ], $widths);
            }
        } else {
            $pdf->Cell(0, 10, 'No gatepasses with status "' . $status . '" found for the selected period.', 0, 1);
        }
        break;
}

// Output the PDF
try {
    error_log("Attempting to output PDF for report type: " . $report_type);
    $pdf->Output('D', $report_type . '_report_' . date('Y-m-d') . '.pdf');
} catch (Exception $e) {
    header("Content-Type: text/plain");
    echo "Error generating PDF: " . $e->getMessage();
    error_log("PDF generation error in export_report_pdf.php: " . $e->getMessage());
}
exit;
